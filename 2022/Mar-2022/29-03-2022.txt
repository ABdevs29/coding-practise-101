Q) Given an array of integers and a positive integer , determine the number of  pairs where  and  +  is divisible by .
Example
 

Three pairs meet the criteria:   and .
Function Description
Complete the divisibleSumPairs function in the editor below.
divisibleSumPairs has the following parameter(s):
int n: the length of array 
int ar[n]: an array of integers
int k: the integer divisor
Returns 
- int: the number of pairs
Input Format
The first line contains  space-separated integers,  and . 
The second line contains  space-separated integers, each a value of .

Soln) 
function divisibleSumPairs(n, k, ar) {
    let count = 0;
    for (let i = 0; i < n; i++) {
        for (let j = i + 1; j < n; j++) {
            if ((+ar[j] + +ar[i]) % k === 0) {
                count++;
            }
        }
    }
    return count;
}

Q) There is a collection of input strings and a collection of query strings. For each query string, determine how many times it occurs in the list of input strings. Return an array of the results.
Example
 

There are  instances of ',  of '' and  of ''. For each query, add an element to the return array, .
Function Description
Complete the function matchingStrings in the editor below. The function must return an array of integers representing the frequency of occurrence of each query string in strings.
matchingStrings has the following parameters:
string strings[n] - an array of strings to search
string queries[q] - an array of query strings

Soln) 
function matchingStrings(strings, queries) {
    let result = [];
    for (let i = 0; i < queries.length; i++) {
        let count = 0;
        for (let j = 0; j < strings.length; j++) {
            if (queries[i] === strings[j]) {
                count++;
            }
        }
        result.push(count);
    }
    return result;
}

Q) 
Given a time in -hour AM/PM format, convert it to military (24-hour) time.
Note: - 12:00:00AM on a 12-hour clock is 00:00:00 on a 24-hour clock. 
- 12:00:00PM on a 12-hour clock is 12:00:00 on a 24-hour clock.
Example

Return '12:01:00'.

Return '00:01:00'.
Function Description
Complete the timeConversion function in the editor below. It should return a new string representing the input time in 24 hour format.
timeConversion has the following parameter(s):
string s: a time in  hour format
Returns
string: the time in  hour format

Soln)
function timeConversion(s) {
    let time = s.split(":");
    let hours = +time[0];
    let timeFrame = time[2].slice(2);
    let minutes = time[1];
    let seconds = time[2].slice(0, 2);
    
    if (timeFrame === "PM" && hours !== 12) {
        hours += 12;
    }
    if (hours === 12 && timeFrame === 'AM') {
        hours = '00';
    } else if (hours < 10) {
        hours = '0' + hours.toString();
    } else {
        hours = hours.toString();
    }
    return([hours, minutes, seconds].join(':'));
}